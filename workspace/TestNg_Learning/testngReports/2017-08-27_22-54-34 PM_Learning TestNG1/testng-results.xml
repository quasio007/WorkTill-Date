<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="0" total="11" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Learning TestNG1" duration-ms="5052" started-at="2017-08-27T17:25:26Z" finished-at="2017-08-27T17:25:31Z">
    <groups>
    </groups>
    <test name="Array Assert" duration-ms="18" started-at="2017-08-27T17:25:26Z" finished-at="2017-08-27T17:25:26Z">
      <class name="com.testNg.ArrayAssert">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.ArrayAssert@2aaf7cc2]" name="beforeMethod" is-config="true" duration-ms="5" started-at="2017-08-27T22:55:26Z" finished-at="2017-08-27T22:55:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f1()[pri:0, instance:com.testNg.ArrayAssert@2aaf7cc2]" name="f1" duration-ms="4" started-at="2017-08-27T22:55:26Z" finished-at="2017-08-27T22:55:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.testNg.ArrayAssert@2aaf7cc2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-08-27T22:55:26Z" finished-at="2017-08-27T22:55:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.testNg.ArrayAssert -->
    </test> <!-- Array Assert -->
    <test name="Data Provider" duration-ms="9" started-at="2017-08-27T17:25:31Z" finished-at="2017-08-27T17:25:31Z">
      <class name="com.testNg.TestSkippingAndPriority">
        <test-method status="SKIP" signature="testTestNg1()[pri:0, instance:com.testNg.TestSkippingAndPriority@129a8472]" name="testTestNg1" duration-ms="1" started-at="2017-08-27T22:55:31Z" finished-at="2017-08-27T22:55:31Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping this one]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping this one
	at com.testNg.TestSkippingAndPriority.testTestNg1(TestSkippingAndPriority.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.TestNG.privateMain(TestNG.java:1364)
	at org.testng.TestNG.main(TestNG.java:1333)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestNg1 -->
        <test-method status="SKIP" signature="testTestNg0()[pri:0, instance:com.testNg.TestSkippingAndPriority@129a8472]" name="testTestNg0" duration-ms="0" started-at="2017-08-27T22:55:31Z" depends-on-methods="com.testNg.TestSkippingAndPriority.testTestNg1" finished-at="2017-08-27T22:55:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestNg0 -->
      </class> <!-- com.testNg.TestSkippingAndPriority -->
      <class name="com.testNg.ParametrisedTestUsingDaataProvider">
        <test-method status="PASS" signature="f3(int, int, boolean)[pri:0, instance:com.testNg.ParametrisedTestUsingDaataProvider@d041cf]" name="f3" duration-ms="1" started-at="2017-08-27T22:55:31Z" data-provider="param" finished-at="2017-08-27T22:55:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f3 -->
        <test-method status="PASS" signature="f3(int, int, boolean)[pri:0, instance:com.testNg.ParametrisedTestUsingDaataProvider@d041cf]" name="f3" duration-ms="1" started-at="2017-08-27T22:55:31Z" data-provider="param" finished-at="2017-08-27T22:55:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f3 -->
        <test-method status="PASS" signature="f3(int, int, boolean)[pri:0, instance:com.testNg.ParametrisedTestUsingDaataProvider@d041cf]" name="f3" duration-ms="1" started-at="2017-08-27T22:55:31Z" data-provider="param" finished-at="2017-08-27T22:55:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f3 -->
        <test-method status="PASS" signature="f1(int, int, boolean)[pri:0, instance:com.testNg.ParametrisedTestUsingDaataProvider@d041cf]" name="f1" duration-ms="1" started-at="2017-08-27T22:55:31Z" data-provider="param" finished-at="2017-08-27T22:55:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method status="PASS" signature="f2(int, int)[pri:0, instance:com.testNg.ParametrisedTestUsingDaataProvider@d041cf]" name="f2" duration-ms="0" started-at="2017-08-27T22:55:31Z" data-provider="param1" finished-at="2017-08-27T22:55:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f2 -->
        <test-method status="PASS" signature="f1(int, int, boolean)[pri:0, instance:com.testNg.ParametrisedTestUsingDaataProvider@d041cf]" name="f1" duration-ms="1" started-at="2017-08-27T22:55:31Z" data-provider="param" finished-at="2017-08-27T22:55:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method status="PASS" signature="f2(int, int)[pri:0, instance:com.testNg.ParametrisedTestUsingDaataProvider@d041cf]" name="f2" duration-ms="0" started-at="2017-08-27T22:55:31Z" data-provider="param1" finished-at="2017-08-27T22:55:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f2 -->
        <test-method status="PASS" signature="f1(int, int, boolean)[pri:0, instance:com.testNg.ParametrisedTestUsingDaataProvider@d041cf]" name="f1" duration-ms="0" started-at="2017-08-27T22:55:31Z" data-provider="param" finished-at="2017-08-27T22:55:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
      </class> <!-- com.testNg.ParametrisedTestUsingDaataProvider -->
    </test> <!-- Data Provider -->
  </suite> <!-- Learning TestNG1 -->
</testng-results>
